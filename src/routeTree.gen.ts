/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CallbackImport } from './routes/callback'
import { Route as protectedImport } from './routes/__protected'
import { Route as IndexImport } from './routes/index'
import { Route as protectedHomeImport } from './routes/__protected/home'

// Create/Update Routes

const CallbackRoute = CallbackImport.update({
  id: '/callback',
  path: '/callback',
  getParentRoute: () => rootRoute,
} as any)

const protectedRoute = protectedImport.update({
  id: '/__protected',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const protectedHomeRoute = protectedHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => protectedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/__protected': {
      id: '/__protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof protectedImport
      parentRoute: typeof rootRoute
    }
    '/callback': {
      id: '/callback'
      path: '/callback'
      fullPath: '/callback'
      preLoaderRoute: typeof CallbackImport
      parentRoute: typeof rootRoute
    }
    '/__protected/home': {
      id: '/__protected/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof protectedHomeImport
      parentRoute: typeof protectedImport
    }
  }
}

// Create and export the route tree

interface protectedRouteChildren {
  protectedHomeRoute: typeof protectedHomeRoute
}

const protectedRouteChildren: protectedRouteChildren = {
  protectedHomeRoute: protectedHomeRoute,
}

const protectedRouteWithChildren = protectedRoute._addFileChildren(
  protectedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof protectedRouteWithChildren
  '/callback': typeof CallbackRoute
  '/home': typeof protectedHomeRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof protectedRouteWithChildren
  '/callback': typeof CallbackRoute
  '/home': typeof protectedHomeRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/__protected': typeof protectedRouteWithChildren
  '/callback': typeof CallbackRoute
  '/__protected/home': typeof protectedHomeRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/callback' | '/home'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/callback' | '/home'
  id: '__root__' | '/' | '/__protected' | '/callback' | '/__protected/home'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  protectedRoute: typeof protectedRouteWithChildren
  CallbackRoute: typeof CallbackRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  protectedRoute: protectedRouteWithChildren,
  CallbackRoute: CallbackRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/__protected",
        "/callback"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/__protected": {
      "filePath": "__protected.tsx",
      "children": [
        "/__protected/home"
      ]
    },
    "/callback": {
      "filePath": "callback.tsx"
    },
    "/__protected/home": {
      "filePath": "__protected/home.tsx",
      "parent": "/__protected"
    }
  }
}
ROUTE_MANIFEST_END */
